# This is a basic workflow to help you get started with Actions

name: Testing-Azure-connectivity

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Login to Azure
      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          enable-AzPSSession: true # optional
          # Set this value to true to enable support for accessing tenants without subscriptions
          allow-no-subscriptions: false # optional

      - name: Azure PowerShell Action - getting all resource groups
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: |
            Write-Host "Listing all resource groups:"
            Get-AzResourceGroup

            Write-Host "Resource group listing end"
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest
          # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: stop # optional, default is Stop
          # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.
          failOnStandardError: true # optional, default is false

      - name: Azure PowerShell Action - display secret
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: |
            Output as JSON
            '${{ secrets.AZURE_CREDENTIALS }}' | ConvertFrom-Json

            # Write-Host "Between double quotes:"
            # Write-Host "${{ secrets.AZURE_CREDENTIALS }}"

            # Write-Host "Between single quotes:"
            # Write-Host '${{ secrets.AZURE_CREDENTIALS }}'
            # $Stuff = "${{ secrets.AZURE_CREDENTIALS }}" | Export-Clixml -Path ./export.xml
            # Write-Host "Var stuff: '$($Stuff)'"
            # Get-Content -Path ./export.xml | Out-String
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest
          # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
          errorActionPreference: stop # optional, default is Stop
          # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.
          failOnStandardError: true # optional, default is false
